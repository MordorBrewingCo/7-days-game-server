Description: Contains a IAM user, S3 bucket for Terraform state, and locking table for use with CI deployment.
Parameters:
  HashKeyElementName:
    Description: HashType PrimaryKey Name
    Type: String
    Default: 'LockID'
    AllowedPattern: '[a-zA-Z0-9]*'
    MinLength: '1'
    MaxLength: '2048'
    ConstraintDescription: must contain only alphanumeric characters
  HashKeyElementType:
    Description: HashType PrimaryKey Type
    Type: String
    Default: S
    AllowedPattern: '[S|N]'
    MinLength: '1'
    MaxLength: '1'
    ConstraintDescription: must be either S or N
  ReadCapacityUnits:
    Description: Provisioned read throughput
    Type: Number
    Default: '5'
    MinValue: '5'
    MaxValue: '10000'
    ConstraintDescription: must be between 5 and 10000
  WriteCapacityUnits:
    Description: Provisioned write throughput
    Type: Number
    Default: '5'
    MinValue: '5'
    MaxValue: '10000'
    ConstraintDescription: must be between 5 and 10000
Resources:
  TerraformStateS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Join:
          - ""
          - - "rust-fragtopia-"
            - Ref: "AWS::Region"
            - "-"
            - Ref: "AWS::AccountId"
            - "-"
            - "terraform"
  TerraformLockTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: 'rust-fragtopia-locktable'
      AttributeDefinitions:
        - AttributeName: !Ref 'HashKeyElementName'
          AttributeType: !Ref 'HashKeyElementType'
      KeySchema:
        - AttributeName: !Ref 'HashKeyElementName'
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: !Ref 'ReadCapacityUnits'
        WriteCapacityUnits: !Ref 'WriteCapacityUnits'
  CiUser:
    Type: AWS::IAM::User
    Properties:
      Path: "/"
      Policies:
      - PolicyName: giveaccesstoec2only
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - ec2:*
            Resource: '*'
          - Effect: Allow
            Action: s3:ListBucket
            Resource: !GetAtt TerraformStateS3Bucket.Arn
          - Effect: Allow
            Action:
            - s3:GetObject
            - s3:PutObject
            Resource:
              Fn::Join:
                - ""
                -
                  - "arn:aws:s3:::"
                  -
                    Ref: "TerraformStateS3Bucket"
                  - "/*"
          - Effect: Allow
            Action:
            - s3:GetObject
            - s3:PutObject
            Resource: !GetAtt TerraformStateS3Bucket.Arn
          - Effect: Allow
            Action:
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:DeleteItem
            Resource: !GetAtt TerraformLockTable.Arn
          - Effect: Allow
            Action:
            - iam:CreateRole
            - iam:PutRolePolicy
            - iam:CreateInstanceProfile
            - iam:GetRole
            Resource: '*'
          - Effect: Allow
            Action:
            - iam:PutRolePolicy
            - iam:AddRoleToInstanceProfile
            - iam:AttachRolePolicy
            - iam:UpdateRole
            - iam:DetachRolePolicy
            Resource:
               Fn::Join:
                  - ""
                  -
                    - "arn:aws:ec2:"
                    -
                      Ref: "AWS::Region"
                    - ":"
                    -
                      Ref: "AWS::AccountId"
                    - ":instance/*"
            Condition:
              StringEquals:
                ec2:ResourceTag/Owner: Rust
  MyAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName:
        !Ref CiUser

Outputs:
  TableName:
    Value: !Ref 'TerraformLockTable'
    Description: provides locking for Terraform state file
  AccessKeyID:
    Value: !Ref 'MyAccessKey'
  AccessKeySecret:
    Value: !GetAtt MyAccessKey.SecretAccessKey
